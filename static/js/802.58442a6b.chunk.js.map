{"version":3,"file":"static/js/802.58442a6b.chunk.js","mappings":"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","sources":["pages/EditPage/components/EditTask/EditTask.styled.ts","pages/EditPage/components/EditTask/EditTask.tsx","pages/EditPage/EditPage.tsx","store/edit/editActions.ts"],"sourcesContent":["export const styles = {\r\n  editContainer: {\r\n    maxWidth: \"1200px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: \"10px\",\r\n    m: \"0 auto\",\r\n    pt: {\r\n      xs: \"100px\",\r\n      md: \"150px\",\r\n    },\r\n    pb: {\r\n      xs: \"50px\",\r\n      md: \"100px\",\r\n    },\r\n  },\r\n  editTable: {\r\n    fontSize: 16,\r\n  },\r\n  editHead: {\r\n    bgcolor: \"#c29463\",\r\n  },\r\n  editTitles: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n  },\r\n  editTextarea: {\r\n    width: \"100%\",\r\n  },\r\n  editButton: {\r\n    color: \"#d99f94\",\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n    },\r\n  },\r\n  saveButton: {\r\n    color: \"#94a975\",\r\n    \"&:hover\": {\r\n      bgcolor: \"transparent\",\r\n    },\r\n  },\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { styles } from \"./EditTask.styled\";\r\nimport { CalendarItemsState, Task } from \"store/edit/editTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTask } from \"store/edit/editActions\";\r\n\r\nexport const EditTask: FC = () => {\r\n  const tasks = useSelector(\r\n    (rootReducer: { edit: CalendarItemsState }) => rootReducer.edit.tasks,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [editedTitle, setEditedTitle] = useState(\"\");\r\n  const [editedTask, setEditedTask] = useState(\"\");\r\n\r\n  const handleEdit = (task: Task) => {\r\n    setEditingTask(task);\r\n    setEditedTitle(task.title);\r\n    setEditedTask(task.task);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!editingTask) return;\r\n\r\n    const updatedTask: Task = {\r\n      ...editingTask,\r\n      title: editedTitle,\r\n      task: editedTask,\r\n    };\r\n\r\n    dispatch(updateTask(updatedTask));\r\n\r\n    setEditingTask(null);\r\n    setEditedTitle(\"\");\r\n    setEditedTask(\"\");\r\n  };\r\n\r\n  return (\r\n    <Box sx={styles.editContainer}>\r\n      <Table>\r\n        <TableHead sx={styles.editHead}>\r\n          <TableRow>\r\n            <TableCell sx={styles.editTitles}>Число</TableCell>\r\n            <TableCell sx={styles.editTitles}>Заголовок</TableCell>\r\n            <TableCell sx={styles.editTitles}>Задание</TableCell>\r\n            <TableCell sx={styles.editTitles}>Опция</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tasks.map((item) => (\r\n            <TableRow key={item.id}>\r\n              <TableCell sx={styles.editTable}>{item.text}</TableCell>\r\n              <TableCell sx={styles.editTable}>\r\n                {editingTask?.id === item.id ? (\r\n                  <TextField\r\n                    value={editedTitle}\r\n                    onChange={(e) => setEditedTitle(e.target.value)}\r\n                    multiline\r\n                    sx={styles.editTextarea}\r\n                  />\r\n                ) : (\r\n                  item.title\r\n                )}\r\n              </TableCell>\r\n              <TableCell sx={styles.editTable}>\r\n                {editingTask?.id === item.id ? (\r\n                  <TextField\r\n                    value={editedTask}\r\n                    onChange={(e) => setEditedTask(e.target.value)}\r\n                    multiline\r\n                    sx={styles.editTextarea}\r\n                  />\r\n                ) : (\r\n                  item.task\r\n                )}\r\n              </TableCell>\r\n              <TableCell sx={styles.editTable}>\r\n                {editingTask?.id === item.id ? (\r\n                  <Button onClick={handleSave} sx={styles.saveButton}>\r\n                    Сохранить\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    onClick={() => handleEdit(item)}\r\n                    sx={styles.editButton}\r\n                  >\r\n                    Редактировать\r\n                  </Button>\r\n                )}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { EditTask } from \"./components/EditTask\";\r\n\r\nconst EditPage = () => {\r\n  return (\r\n    <>\r\n      <EditTask />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n","import {\r\n  CalendarItemsActionTypes,\r\n  ResetEditStateAction,\r\n  Task,\r\n  UpdateTaskAction,\r\n} from \"./editTypes\";\r\n\r\nexport const updateTask = (task: Task): UpdateTaskAction => ({\r\n  type: CalendarItemsActionTypes.UPDATE_TASK,\r\n  payload: task,\r\n});\r\n\r\nexport const resetEditState = (): ResetEditStateAction => {\r\n  return {\r\n    type: CalendarItemsActionTypes.RESET_EDIT_STATE,\r\n  };\r\n};\r\n"],"names":["styles","editContainer","maxWidth","display","flexDirection","justifyContent","alignItems","gap","m","pt","xs","md","pb","editTable","fontSize","editHead","bgcolor","editTitles","color","editTextarea","width","editButton","saveButton","EditTask","tasks","useSelector","rootReducer","edit","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","editingTask","setEditingTask","_useState3","_useState4","editedTitle","setEditedTitle","_useState5","_useState6","editedTask","setEditedTask","handleSave","updatedTask","_objectSpread","title","task","updateTask","_jsx","Box","sx","children","_jsxs","Table","TableHead","TableRow","TableCell","TableBody","map","item","text","id","TextField","value","onChange","e","target","multiline","Button","onClick","_Fragment","type","CalendarItemsActionTypes","UPDATE_TASK","payload","resetEditState","RESET_EDIT_STATE"],"sourceRoot":""}