{"version":3,"file":"static/js/332.c59a914a.chunk.js","mappings":"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","sources":["pages/SantasPage/components/Santas/Santas.styled.ts","config/cantasItems.ts","components/SantaCard/SantaCard.styled.ts","components/SantaCard/SantaCard.tsx","pages/SantasPage/components/Santas/Santas.tsx","pages/SantasPage/SantasPage.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["export const styles = {\r\n  santasContainer: {\r\n    maxWidth: \"1200px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    gap: {\r\n      xs: \"30px\",\r\n      md: \"70px\",\r\n    },\r\n    m: \"0 auto\",\r\n    p: {\r\n      xs: \"100px 20px 50px 20px\",\r\n      md: \"150px 20px 100px 20px\",\r\n    },\r\n  },\r\n  santasTitle: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1.3rem\",\r\n      md: \"1.5rem\",\r\n    },\r\n    color: \"#c29463\",\r\n    textAlign: \"center\",\r\n  },\r\n  santasList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    gap: \"20px\",\r\n  },\r\n};\r\n","import zuzya from \"assets/images/santas/zuzya.png\";\nimport santa from \"assets/images/santas/santa.png\";\nimport moroz from \"assets/images/santas/moroz.png\";\nimport youlupukki from \"assets/images/santas/youlupukki.png\";\nimport natalle from \"assets/images/santas/natalle.png\";\nimport noel from \"assets/images/santas/noel.png\";\nimport klaas from \"assets/images/santas/klaas.png\";\nimport ulebukk from \"assets/images/santas/ulebukk.png\";\n\nconst santasItems = [\n  {\n    id: \"1\",\n    image: zuzya,\n    title: \"Зюзя\",\n    country: \"Беларусь\",\n    text: \"Зюзя - щедрый старик с волосами из белого снега, украшенной длинной бородой, который обитает в лесу. Его дыхание — стужа. Когда он плачет, его слезы превращаются в кристальные сосульки. Каждое его слово окутанно морозным инеем. Зимой он прыгает по полям, лесам и улицам, нагоняя своей магической булавой стужу. От стука булавы реки, ручьи и лужи замерзают под трескучим морозом. Зюзя не любит тех, что жалуется на холод, и радует тех, кто остается бодрым и веселым - он дарит им крепкое здоровье и румянец на лице.\",\n  },\n  {\n    id: \"2\",\n    image: santa,\n    title: \"Санта Клаус\",\n    country: \"США, Канада\",\n    text: \"Один из самых известных коллег Деда Мороза. Санта перемещается на летающих санях, запряжённых оленями. Он входит в дом через дымоход, чтобы оставить подарки в носках, которые висят на каминной полке. Обычно для Санты оставляют угощение в виде молока и печенья. Где именно живут Санта Клаус и его жена, Миссис Клаус, остается загадкой - это либо Лапландия, либо Северный Полюс. Но точно известно, что ему помогают делать игрушки эльфы.\",\n  },\n  {\n    id: \"3\",\n    image: moroz,\n    title: \"Дед Мороз\",\n    country: \"Россия\",\n    text: \"Дедушка Мороз также хорошо знаком детям и взрослым в Беларуси и Украине. Он перемещается на быстрой тройке лошадей. Рядом с ним всегда находится внучка Снегурочка. Цвет шубы Дела Мороза может быть разным - голубой, синий, белый или красный. Популярна традиция оставлять письмо Деду Морозу под ёлку и находить подарки под ней утром 1 января.\",\n  },\n  {\n    id: \"4\",\n    image: youlupukki,\n    title: \"Йоулупукки\",\n    country: \"Финляндия\",\n    text: \"Йоулупукки носит длинный колпак, а перед приездом звенит колокольчиком. Как только наступает Рождество, Йоулупукки отправляется развозить подарки. Он не прячется от детей и сам лично приносит им сюрпризы. У Йоулупукки также есть жена Муори, которая символизирует зиму. Они живут на горе Корватунтури в Лапландии. Помощниками Йоулупукки служат гномы, которые следят за поведением детей по всему миру. Они живут в финских Пещерах Эха и перед Рождеством помогают Йоулупукки сортировать почту и упаковывать подарки.\",\n  },\n  {\n    id: \"5\",\n    image: natalle,\n    title: \"Баббо Натале\",\n    country: \"Италия\",\n    text: \"Баббо Натале всегда носит колпак с кисточкой и красный полушубок с белым мехом. На руках у него всегда белые перчатки. Баббо Натале перемещается на своих летающих оленях на санях и попадает в дома через дымоход. Он очень любит молоко и сладости, поэтому вечером перед Рождеством принято оставлять для него угощение. Он также посещает только тех детей, которые написали ему письмо. В Италии установлены специальные почтовые ящики, куда дети могут отправить свои послания Баббо Натале. А подарки раздает летающая на метле Фея Бефана.\",\n  },\n  {\n    id: \"6\",\n    image: noel,\n    title: \"Пэр Ноэль и Пэр Фуэтар\",\n    country: \"Франция\",\n    text: \"Пэр Ноэль работает вместе со своим братом по имени Пэр Фуэтар. Пэр Ноэль в красной шубе с капюшоном и белой бородой выглядит очень похожим на традиционного образа Деда Мороза. Он приезжает к домам на ослике и через дымоход оставляет подарки в обуви, оставленной перед камином. А его брат Пэр Фуэтар имеет черную бороду и коричневую шубу. Он следует за Пэр Ноэлем и использует веник для наказания непослушных детей. Французские дети имеют стимул вести себя хорошо, чтобы получить подарки от Пэра Ноэля, а не быть наказанными Пэром Фуэтаром.\",\n  },\n  {\n    id: \"7\",\n    image: klaas,\n    title: \"Синтерклаас\",\n    country: \"Нидерланды, Бельгия\",\n    text: \"Синтерклаас - это величественный старик с белой бородой, который одевается в красный халат. Он прибывает в Амстердам на корабле перед Новым годом, но сам не раздает подарки. Вместо этого, у него есть группа помощников - мавров. Сам Синтерклаас перемещается по городу на белом коне. У него есть большая книга, в которой записаны имена всех детей с их адресами, но общается он только с родителями, поэтому дети передают письма с новогодними пожеланиями через них. 6 декабря Синтерклаас оставляет подарки ребятам, кладя их в обувь.\",\n  },\n  {\n    id: \"8\",\n    image: ulebukk,\n    title: \"Юлебукк\",\n    country: \"Дания, Норвегия\",\n    text: \"Юлебукк приходит к народу со своей верной козочкой, груженной подарками. Подарки раздаются 24 декабря, но они спрятаны очень хитро, и нужно потратить много усилий, чтобы их найти. Чтобы помочь Юлебукку раздать подарки, на помощь приходят ниссе - маленькие существа из скандинавских легенд, похожие на семь гномов из Белоснежки. Они являются своего рода домовыми и способны приносить в дом удачу и радость.\",\n  },\n];\n\nexport default santasItems;\n","export const styles = {\r\n  santaCard: {\r\n    display: \"flex\",\r\n    flexDirection: {\r\n      xs: \"column\",\r\n      md: \"row\",\r\n    },\r\n    maxWidth: 1200,\r\n    boxShadow: \"0px 5px 10px 0px rgba(67, 74, 56, 0.2)\",\r\n  },\r\n  santaDescription: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1rem\",\r\n    },\r\n    textAlign: \"justify\",\r\n  },\r\n  santaSubtitle: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1rem\",\r\n      md: \"1.2rem\",\r\n    },\r\n    textAlign: \"justify\",\r\n    color: \"#c29463\",\r\n  },\r\n  santaCountry: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1rem\",\r\n      md: \"1.2rem\",\r\n    },\r\n    textAlign: \"justify\",\r\n    color: \"#d99f94\",\r\n  },\r\n  santaPicture: {\r\n    objectFit: \"contain\",\r\n    alignSelf: \"center\",\r\n    width: {\r\n      xs: \"100%\",\r\n      md: \"30%\",\r\n      lg: \"20%\",\r\n    },\r\n    maxWidth: {\r\n      xs: \"300px\",\r\n      md: \"auto\",\r\n    },\r\n  },\r\n  santaContent: {\r\n    width: {\r\n      xs: \"100%\",\r\n      md: \"70%\",\r\n      lg: \"80%\",\r\n    },\r\n  },\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@mui/material\";\r\nimport { styles } from \"./SantaCard.styled\";\r\nimport { ISantaCardProps } from \"./SantaCardTypes\";\r\n\r\nexport const SantaCard: FC<ISantaCardProps> = ({\r\n  image,\r\n  title,\r\n  text,\r\n  country,\r\n}) => {\r\n  return (\r\n    <Card sx={styles.santaCard}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={image}\r\n        alt={title}\r\n        sx={styles.santaPicture}\r\n      />\r\n      <CardContent sx={styles.santaContent}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"div\"\r\n          sx={styles.santaSubtitle}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"div\"\r\n          sx={styles.santaCountry}\r\n        >\r\n          {country}\r\n        </Typography>\r\n        <Typography sx={styles.santaDescription}>{text}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { styles } from \"./Santas.styled\";\r\nimport santasItems from \"config/cantasItems\";\r\nimport { SantaCard } from \"components/SantaCard\";\r\n\r\nexport const Santas: FC = () => {\r\n  const santas = santasItems;\r\n\r\n  return (\r\n    <Box sx={styles.santasContainer}>\r\n      <Typography sx={styles.santasTitle}>Деды Морозы разных стран</Typography>\r\n      <Box sx={styles.santasList}>\r\n        {santas.map((item) => (\r\n          <SantaCard\r\n            key={item.id}\r\n            image={item.image}\r\n            title={item.title}\r\n            text={item.text}\r\n            country={item.country}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Santas } from \"./components/Santas\";\r\n\r\nconst SantasPage = () => {\r\n  return (\r\n    <>\r\n      <Santas />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SantasPage;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["styles","santasContainer","maxWidth","display","flexDirection","justifyContent","gap","xs","md","m","p","santasTitle","mb","fontSize","color","textAlign","santasList","flexWrap","id","image","title","country","text","santaCard","boxShadow","santaDescription","santaSubtitle","santaCountry","santaPicture","objectFit","alignSelf","width","lg","santaContent","SantaCard","_ref","_jsxs","Card","sx","children","_jsx","CardMedia","component","alt","CardContent","Typography","gutterBottom","variant","Santas","santas","santasItems","Box","map","item","_Fragment","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","_props$raised","raised","elevation","undefined"],"sourceRoot":""}