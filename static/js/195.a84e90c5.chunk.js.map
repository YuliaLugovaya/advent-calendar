{"version":3,"file":"static/js/195.a84e90c5.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/MoviesCard/MoviesCard.styled.ts","components/MoviesCard/MoviesCard.tsx","pages/CartoonListPage/components/CartoonList/CartoonList.styled.ts","config/cartoonItems.ts","pages/CartoonListPage/components/CartoonList/CartoonList.tsx","pages/CartoonListPage/CartoonListPage.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","export const styles = {\r\n  moviesCard: {\r\n    maxWidth: 345,\r\n    boxShadow: \"0px 5px 10px 0px rgba(67, 74, 56, 0.2)\",\r\n  },\r\n  moviesDescription: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1rem\",\r\n    },\r\n    textAlign: \"justify\",\r\n  },\r\n  moviesSubtitle: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1rem\",\r\n      md: \"1.2rem\",\r\n    },\r\n    textAlign: \"justify\",\r\n    color: \"#d99f94\",\r\n  },\r\n  moviesPicture: {\r\n    objectFit: \"cover\",\r\n  },\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@mui/material\";\r\nimport { styles } from \"./MoviesCard.styled\";\r\nimport { IMoviesCardProps } from \"./MoviesCardTypes\";\r\n\r\nexport const MoviesCard: FC<IMoviesCardProps> = ({ image, title, text }) => {\r\n  return (\r\n    <Card sx={styles.moviesCard}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={image}\r\n        alt={title}\r\n        sx={styles.moviesPicture}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"div\"\r\n          sx={styles.moviesSubtitle}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <Typography sx={styles.moviesDescription}>{text}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","export const styles = {\r\n  cartoonContainer: {\r\n    maxWidth: \"1200px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    gap: {\r\n      xs: \"30px\",\r\n      md: \"70px\",\r\n    },\r\n    m: \"0 auto\",\r\n    p: {\r\n      xs: \"100px 20px 50px 20px\",\r\n      md: \"150px 20px 100px 20px\",\r\n    },\r\n  },\r\n  cartoonTitle: {\r\n    mb: {\r\n      xs: \"20px\",\r\n    },\r\n    fontSize: {\r\n      xs: \"1.3rem\",\r\n      md: \"1.5rem\",\r\n    },\r\n    color: \"#c29463\",\r\n    textAlign: \"center\",\r\n  },\r\n  cartoonList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    gap: \"20px\",\r\n  },\r\n};\r\n","import frozen from \"assets/images/cartoons/frozen.jpeg\";\nimport anastasia from \"assets/images/cartoons/anastasia.jpg\";\nimport kungFu from \"assets/images/cartoons/kung-fu.jpg\";\nimport ice from \"assets/images/cartoons/ice.jpg\";\nimport grinch from \"assets/images/cartoons/grinch.jpg\";\nimport secret from \"assets/images/cartoons/secret.jpg\";\nimport micky from \"assets/images/cartoons/micky.jpg\";\nimport rise from \"assets/images/cartoons/rise.jpg\";\nimport tomAndJerry from \"assets/images/cartoons/tom-and-jerry.jpg\";\nimport twelveMonth from \"assets/images/cartoons/twelve-month.jpg\";\n\nconst cartoonItems = [\n  {\n    id: \"1\",\n    image: frozen,\n    title: \"Холодное сердце\",\n    text: \"Мультик про сказочное королевство, которое погрузилось в вечную зиму, а снять проклятие может только принцесса Эльза. На поиски Эльзы отправляется родная сестра Эльзы Анна в компании Кристофера, Свена и Олафа. Есть продолжение - Холодное сердце 2 и несколько короткометражных картин.\",\n  },\n  {\n    id: \"2\",\n    image: anastasia,\n    title: \"Анастасия\",\n    text: \"Анастасия, дочь последнего русского царя, чудом осталась жива после революции, но не знает, кто она и откуда. Чудеса начинаются, когда она приезжает в Париж, находит бабушку и попадает на настоящий бал.\",\n  },\n  {\n    id: \"3\",\n    image: kungFu,\n    title: \"Кунг‑фу Панда: праздничный выпуск\",\n    text: \"Сюжет рассказывает о доброй традиции По устраивать шумный праздник для всех жителей своей деревни. Но в этот год все под угрозой, потому что ему пришло поручение организовать торжество в Нефритовом дворце. Заодно можно пересмотреть серию мультиков про приключения панды По и его друзей.\",\n  },\n  {\n    id: \"4\",\n    image: ice,\n    title: \"Ледниковый период: гигантское Рождество\",\n    text: \"Ледниковый период - серия мультфильмов, одна из самых популярных историй среди детей, которые можно пересматривать много раз. В новогодней истории, как и всегда, Сид встревает в приключения, и он решает встретиться с главным дедушкой Рождества лично, чтобы принести свои извинения и получить заветный подарок.\",\n  },\n  {\n    id: \"5\",\n    image: grinch,\n    title: \"Гринч\",\n    text: \"Сюжет рассказывает о Гринче, который терпеть не может Рождество и не понимает, почему все ему радуются. По мере приближения праздника угрюмый главный герой становится все мрачнее, видя веселье окружающих и праздничную суету.\",\n  },\n  {\n    id: \"6\",\n    image: secret,\n    title: \"Секретная служба Санта-Клауса\",\n    text: \"Этот новогодний мультик для детей, которые не верят в Деда Мороза и Санта-Клауса. Мультфильм не только рассказывает о торжестве добра, но и приоткрывает завесу тайны о том, как Санта-Клаусу удается доставить миллионы подарков за одну ночь и ничего не перепутать.\",\n  },\n  {\n    id: \"7\",\n    image: micky,\n    title: \"Волшебное Рождество у Микки\",\n    text: \"Начинается снежная буря, которая заносит Мышиный домик полностью. Так как выбраться нельзя, решено отпраздновать Рождество у Микки. И Микки принимает решение устроить новогодний марафон мультфильмов, которые показывают, что Рождество — это действительно классный праздник.\",\n  },\n  {\n    id: \"8\",\n    image: rise,\n    title: \"Хранители снов\",\n    text: \"Хранители снов — волшебные существа, которые охраняют детские мечты и их веру в чудеса. Они работают отдельно, но когда над детьми нависает реальная угроза, решают объединиться. Злой Кромешник решил разрушить детскую веру в чудеса. Если ему это удастся, в мире воцарится тьма и уныние, поэтому Хранители снов храбро встают на защиту своих подопечных.\",\n  },\n  {\n    id: \"9\",\n    image: tomAndJerry,\n    title: \"Том и Джерри: история о Щелкунчике\",\n    text: \"Джерри, попав в пустой оперный зал, загадывает стать известным исполнителем. Его желание сбывается, и он попадает в волшебную страну. Но сТом приводит стаю бездомных котов, которые врываются в волшебное царство и похищают балерину из коробки, с которой танцевал Джерри. Теперь ему нужно спасти друзей и восстановить волшебство.\",\n  },\n  {\n    id: \"10\",\n    image: twelveMonth,\n    title: \"Двенадцать месяцев\",\n    text: \"Один из самых старых и добрых мультиков про Новый год и Рождество, который смотрели еще наши родители в детстве. Королева хочет корзину подснежников в обмен на золото, хотя на дворе стоит лютая зима. Одна жадная крестьянка отправляет в лес свою падчерицу и говорит не возвращаться без подснежников. Девочка знакомится с Братьями-Месяцами, каждый из которых показывает ей, на что они способны.\",\n  },\n];\n\nexport default cartoonItems;\n","import React, { FC } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { styles } from \"./CartoonList.styled\";\r\nimport cartoonItems from \"config/cartoonItems\";\r\nimport { MoviesCard } from \"components/MoviesCard\";\r\n\r\nexport const CartoonList: FC = () => {\r\n  const cartoons = cartoonItems;\r\n\r\n  return (\r\n    <Box sx={styles.cartoonContainer}>\r\n      <Typography sx={styles.cartoonTitle}>\r\n        Мультфильмы про зиму, Новый год и Рождество\r\n      </Typography>\r\n      <Box sx={styles.cartoonList}>\r\n        {cartoons.map((item) => (\r\n          <MoviesCard\r\n            key={item.id}\r\n            image={item.image}\r\n            title={item.title}\r\n            text={item.text}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CartoonList } from \"./components/CartoonList\";\r\n\r\nconst CartoonListPage = () => {\r\n  return (\r\n    <>\r\n      <CartoonList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartoonListPage;\r\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","_props$raised","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","_props$component","component","as","moviesCard","maxWidth","boxShadow","moviesDescription","mb","xs","fontSize","textAlign","moviesSubtitle","md","color","moviesPicture","objectFit","MoviesCard","_ref","image","title","text","_jsxs","Card","sx","children","CardMedia","alt","CardContent","Typography","gutterBottom","variant","cartoonContainer","display","flexDirection","justifyContent","gap","m","p","cartoonTitle","cartoonList","flexWrap","id","CartoonList","cartoons","cartoonItems","Box","map","item","_Fragment"],"sourceRoot":""}